lua_code_cache off;
lua_package_path '/path/to/lua/module/search/path';
lua_shared_dict rewrite_conf 10m;
init_by_lua_file init.lua;

#init.lua
local cjson = require "cjson"
local rewrite_conf = ngx.shared.rewrite_conf;

file = io.input("require.json")

local jsonCfg = ""
repeat
	line = io.read
	if nil == line then
		break
    end
	jsonCfg = jsonCfg..line
until(false)

io.close(file)
rewrite_json = cjson.decode(jsonCfg)
ngx.log(ngx.INFO, "rewrite_json="..rewrite_json)
for k,v in pairs(rewrite_json) do
	ngx.log(ngx.DEBUG, "k=" .. k .. ",v=" .. v)
	rewrite_conf[k] = v
end

#rewrite.json
{
	"www.abc.com" : {
		"rewrite_urls":[
			{
				"url":"/a/hello.html",
				"rewrite_upstream" : "www.a.com"
			},
			{
				"url":"/b/hello.html",
				"rewrite_upstream" : "www.b.com"
			}
		]
	}
}

#set.lua
local cjson = require "cjson"
local rewrite_conf = ngx.shared.rewrite_conf
local host = ngx.var.http_host
local uri = ngx.var.uri

local default_upstream = host

if rewrite_conf[host] ~= nil then
	for i, elem in ipairs(rewrite_conf[host]['rewrite_urls']
		if uri == elem['uri'] then
			default_upstream = elem['rewrite_upstream']
			break
		end
	end
end
ngx.log(ngx.INFO, "default_uspstream="..default_usptream)
return default_upstream
